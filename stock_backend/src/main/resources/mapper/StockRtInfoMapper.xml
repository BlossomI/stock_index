<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.stock.mapper.StockRtInfoMapper">

    <resultMap id="BaseResultMap" type="com.itheima.stock.pojo.StockRtInfo">

        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="stockCode" column="stock_code" jdbcType="CHAR"/>
        <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
        <result property="stockName" column="stock_name" jdbcType="VARCHAR"/>
        <result property="openPrice" column="open_price" jdbcType="DECIMAL"/>
        <result property="preClosePrice" column="pre_close_price" jdbcType="DECIMAL"/>
        <result property="curPrice" column="cur_price" jdbcType="DECIMAL"/>
        <result property="maxPrice" column="max_price" jdbcType="DECIMAL"/>
        <result property="minPrice" column="min_price" jdbcType="DECIMAL"/>
        <result property="tradeAmount" column="trade_amount" jdbcType="BIGINT"/>
        <result property="tradeVolume" column="trade_volume" jdbcType="DECIMAL"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,stock_code,cur_time,
        stock_name,open_price,pre_close_price,
        cur_price,max_price,min_price,
        trade_amount,trade_volume
    </sql>

    <!--    <![CDATA[ ]]> -->

    <!--分页查询涨幅榜-->
    <select id="stockIncreaseLimit" resultType="com.itheima.stock.common.domain.StockUpDownDomain">
        <![CDATA[
        SELECT
            trade_amount                                    AS tradeAmt,
            pre_close_price                                 AS preClosePrice,
            (max_price - min_price) / pre_close_price       AS amplitude,
            stock_code                                      AS code,
            stock_name                                      AS name,
            DATE_FORMAT(cur_time, '%Y%m%d')                 AS curDate,
            trade_volume                                    AS tradeVol,
            (cur_price - pre_close_price) / pre_close_price AS upDown,
            cur_price                                       AS tradePrice
        FROM
            db_socket_backend.stock_rt_info
        WHERE
            cur_time = #{curDateTime}
        ORDER BY cur_time DESC,
                 upDown DESC
        LIMIT 10;
        ]]>
    </select>

    <!--涨幅榜-->
    <select id="stockAll" resultType="com.itheima.stock.common.domain.StockUpDownDomain">
        SELECT
            trade_amount                                    AS tradeAmt,
            pre_close_price                                 AS preClosePrice,
            (max_price - min_price) / pre_close_price       AS amplitude,
            stock_code                                      AS code,
            stock_name                                      AS name,
            DATE_FORMAT(cur_time, '%Y%m%d')                 AS curDate,
            trade_volume                                    AS tradeVol,
            (cur_price - pre_close_price)                   AS increase,
            (cur_price - pre_close_price) / pre_close_price AS upDown,
            cur_price                                       AS tradePrice
        FROM
            db_socket_backend.stock_rt_info
        ORDER BY cur_time DESC,
                 updown DESC
    </select>

    <!--条件查询涨停、跌停数据-->
    <select id="upDownCount" resultType="java.util.Map">
        SELECT
        tmp.curTime AS `time`,
        COUNT(*) AS `count`
        FROM
        (
        SELECT
        DATE_FORMAT(cur_time,'%Y%m%d%H%i') AS `curTime`,
        (cur_price-pre_close_price)/pre_close_price AS upDown
        FROM
        db_socket_backend.stock_rt_info
        WHERE cur_time BETWEEN #{openDate} AND #{avlDate}
        HAVING
        <if test="flag==1">
            upDown >=0.05
        </if>
        <if test="flag==0">
            upDown &lt;=-0.05
        </if>
        ) AS tmp
        GROUP BY tmp.curTime
    </select>

    <!--    查询当前时间到最近的开盘时间之间每分钟交易量， -->
    <select id="stockTradeVolCount" resultType="java.util.Map">
        SELECT
        SUM(trade_volume) AS `count`,
        DATE_FORMAT(cur_time, '%Y%m%d%H%i') AS `time`
        FROM
        db_socket_backend.stock_market_index_info
        WHERE
        cur_time BETWEEN #{openTime} AND #{nowTime}
        AND mark_Id IN
        <foreach collection="marketIds" item="id" separator="," open="(" close=")">#{id}
        </foreach
        >
        GROUP BY TIME;
    </select>


    <!--   查询涨幅区间股票个数-->
    <select id="stockUpDownScopeCount" resultType="java.util.Map">
        <![CDATA[
        SELECT
            tt.title,
            COUNT(*) AS count
        FROM
            (
                SELECT
                    CASE
                        WHEN temp.rate > 0.07 THEN '>7%'
                        WHEN temp.rate > 0.05 AND temp.rate <= 0.07 THEN '5~7%'
                        WHEN temp.rate > 0.03 AND temp.rate <= 0.05 THEN '3~5%'
                        WHEN temp.rate > 0 AND temp.rate <= 0.03 THEN '0~3%'
                        WHEN temp.rate > -0.03 AND temp.rate <= 0 THEN '-3~0%'
                        WHEN temp.rate > -0.05 AND temp.rate <= -0.03 THEN '-5~-3%'
                        WHEN temp.rate > -0.07 AND temp.rate <= -0.05 THEN '-7~-5%'
                        ELSE '<-7%'
                        END AS 'title'
                FROM
                    (
                        SELECT
                            DATE_FORMAT(sri.cur_time, '%Y%m%d%H%i')                     AS curTime,
                            (sri.cur_price - sri.pre_close_price) / sri.pre_close_price AS rate
                        FROM
                            db_socket_backend.stock_rt_info sri
                        WHERE sri.cur_time = #{avlDate}
                    ) AS temp
            ) AS tt
        GROUP BY tt.title
        ]]>
    </select>


    <!--    功能描述：查询单个个股的分时行情数据，也就是统计指定股票T日每分钟的交易数据；
          如果当前日期不在有效时间内，则以最近的一个股票交易时间作为查询时间点-->
    <select id="stockScreenTimeSharing" resultType="com.itheima.stock.common.domain.Stock4MinDomain">
        SELECT
            DATE_FORMAT(sri.cur_time, '%Y%m%d%H%i') AS date,
            sri.trade_amount                        AS tradeAmt,
            sri.stock_code                          AS code,
            sri.min_price                           AS lowPrice,
            sri.pre_close_price                     AS preClosePrice,
            sri.stock_name                          AS name,
            sri.max_price                           AS highPrice,
            sri.open_price                          AS openPrice,
            sri.trade_volume                        AS tradeVol,
            sri.cur_price                           AS tradePrice
        FROM
            db_socket_backend.stock_rt_info AS sri
        WHERE
              sri.stock_code = #{stockCode}
          AND sri.cur_time BETWEEN #{startDate} AND #{endDate}
    </select>


    <!--    获取个股日K数据-->
    <select id="stockScreenDkLine" resultType="com.itheima.stock.common.domain.StockDailyDKLineDomain">
        SELECT
            DATE_FORMAT(sri2.cur_time, '%Y%m%d') AS `date`,
            sri2.trade_amount                    AS tradeAmt,
            sri2.stock_code                      AS code,
            sri2.min_price                       AS lowPrice,
            sri2.stock_name                      AS name,
            sri2.max_price                       AS highPrice,
            sri2.open_price                      AS openPrice,
            sri2.trade_volume                    AS tradeVol,
            sri2.cur_price                       AS closePrice,
            sri2.pre_close_price                 AS preClosePrice
        FROM
            db_socket_backend.stock_rt_info sri2
        WHERE
            sri2.stock_code = #{stockCode} AND
            sri2.cur_time IN (
                SELECT
                    MAX(sri.cur_time) AS `closeDate`
                FROM
                    db_socket_backend.stock_rt_info sri
                WHERE
                      sri.stock_code = '600021'
                  AND sri.cur_time BETWEEN '20220101093000' AND '20220106142500'
                GROUP BY DATE_FORMAT(sri.cur_time, '%Y%m%d')
                             )
        ORDER BY `date`;

    </select>


    <!--    批量插入-->
    <insert id="insertBatch">
        insert into db_socket_backend.stock_rt_info
        ( id,stock_code,cur_time
        ,stock_name,open_price,pre_close_price
        ,cur_price,max_price,min_price
        ,trade_amount,trade_volume)
        values
        <foreach collection="list" item="si" separator=",">
            (#{si.id,jdbcType=BIGINT},#{si.stockCode,jdbcType=CHAR},#{si.curTime,jdbcType=TIMESTAMP}
            ,#{si.stockName,jdbcType=VARCHAR},#{si.openPrice,jdbcType=DECIMAL},#{si.preClosePrice,jdbcType=DECIMAL}
            ,#{si.curPrice,jdbcType=DECIMAL},#{si.maxPrice,jdbcType=DECIMAL},#{si.minPrice,jdbcType=DECIMAL}
            ,#{si.tradeAmount,jdbcType=BIGINT},#{si.tradeVolume,jdbcType=DECIMAL})
        </foreach>
    </insert>


    <!--    auto generated-->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from db_socket_backend.stock_rt_info
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE
        FROM
            db_socket_backend.stock_rt_info
        WHERE
            id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.itheima.stock.pojo.StockRtInfo"
            useGeneratedKeys="true">
        INSERT INTO db_socket_backend.stock_rt_info
        ( id, stock_code, cur_time
        , stock_name, open_price, pre_close_price
        , cur_price, max_price, min_price
        , trade_amount, trade_volume)
        VALUES ( #{id,jdbcType=VARCHAR}, #{stockCode,jdbcType=CHAR}, #{curTime,jdbcType=TIMESTAMP}
               , #{stockName,jdbcType=VARCHAR}, #{openPrice,jdbcType=DECIMAL}, #{preClosePrice,jdbcType=DECIMAL}
               , #{curPrice,jdbcType=DECIMAL}, #{maxPrice,jdbcType=DECIMAL}, #{minPrice,jdbcType=DECIMAL}
               , #{tradeAmount,jdbcType=BIGINT}, #{tradeVolume,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.itheima.stock.pojo.StockRtInfo"
            useGeneratedKeys="true">
        insert into db_socket_backend.stock_rt_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="stockCode != null">stock_code,</if>
            <if test="curTime != null">cur_time,</if>
            <if test="stockName != null">stock_name,</if>
            <if test="openPrice != null">open_price,</if>
            <if test="preClosePrice != null">pre_close_price,</if>
            <if test="curPrice != null">cur_price,</if>
            <if test="maxPrice != null">max_price,</if>
            <if test="minPrice != null">min_price,</if>
            <if test="tradeAmount != null">trade_amount,</if>
            <if test="tradeVolume != null">trade_volume,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=VARCHAR},</if>
            <if test="stockCode != null">#{stockCode,jdbcType=CHAR},</if>
            <if test="curTime != null">#{curTime,jdbcType=TIMESTAMP},</if>
            <if test="stockName != null">#{stockName,jdbcType=VARCHAR},</if>
            <if test="openPrice != null">#{openPrice,jdbcType=DECIMAL},</if>
            <if test="preClosePrice != null">#{preClosePrice,jdbcType=DECIMAL},</if>
            <if test="curPrice != null">#{curPrice,jdbcType=DECIMAL},</if>
            <if test="maxPrice != null">#{maxPrice,jdbcType=DECIMAL},</if>
            <if test="minPrice != null">#{minPrice,jdbcType=DECIMAL},</if>
            <if test="tradeAmount != null">#{tradeAmount,jdbcType=BIGINT},</if>
            <if test="tradeVolume != null">#{tradeVolume,jdbcType=DECIMAL},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.itheima.stock.pojo.StockRtInfo">
        update db_socket_backend.stock_rt_info
        <set>
            <if test="stockCode != null">
                stock_code = #{stockCode,jdbcType=CHAR},
            </if>
            <if test="curTime != null">
                cur_time = #{curTime,jdbcType=TIMESTAMP},
            </if>
            <if test="stockName != null">
                stock_name = #{stockName,jdbcType=VARCHAR},
            </if>
            <if test="openPrice != null">
                open_price = #{openPrice,jdbcType=DECIMAL},
            </if>
            <if test="preClosePrice != null">
                pre_close_price = #{preClosePrice,jdbcType=DECIMAL},
            </if>
            <if test="curPrice != null">
                cur_price = #{curPrice,jdbcType=DECIMAL},
            </if>
            <if test="maxPrice != null">
                max_price = #{maxPrice,jdbcType=DECIMAL},
            </if>
            <if test="minPrice != null">
                min_price = #{minPrice,jdbcType=DECIMAL},
            </if>
            <if test="tradeAmount != null">
                trade_amount = #{tradeAmount,jdbcType=BIGINT},
            </if>
            <if test="tradeVolume != null">
                trade_volume = #{tradeVolume,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.itheima.stock.pojo.StockRtInfo">
        UPDATE db_socket_backend.stock_rt_info
        SET stock_code = #{stockCode,jdbcType=CHAR},
            cur_time = #{curTime,jdbcType=TIMESTAMP},
            stock_name = #{stockName,jdbcType=VARCHAR},
            open_price = #{openPrice,jdbcType=DECIMAL},
            pre_close_price = #{preClosePrice,jdbcType=DECIMAL},
            cur_price = #{curPrice,jdbcType=DECIMAL},
            max_price = #{maxPrice,jdbcType=DECIMAL},
            min_price = #{minPrice,jdbcType=DECIMAL},
            trade_amount = #{tradeAmount,jdbcType=BIGINT},
            trade_volume = #{tradeVolume,jdbcType=DECIMAL}
        WHERE
            id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>
